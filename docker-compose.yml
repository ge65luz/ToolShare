version: "3.8"

networks:
  toolshare_network:

services:
  db:
    image: postgres:alpine
    container_name: SQL_container
    env_file:
      - environment/.env.db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - toolshare_network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: ghcr.io/victor-velezmoro/ToolShare/web:latest
    container_name: fastapi_app
    env_file:
    - environment/.env.production
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs 
    networks:
      - toolshare_network


  test:
    build:
      context: .
      dockerfile: Dockerfile
    image: ghcr.io/victor-velezmoro/ToolShare/test:latest
    container_name: fastapi_tests
    env_file:
      - environment/.env.testing
    depends_on:
      db:
        condition: service_healthy
    command: ["pytest", "-v", "--ignore=WithoutSecurity"]
    networks:
      - toolshare_network

volumes:
  postgres_data:
